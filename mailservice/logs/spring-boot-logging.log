2020-09-12 00:00:02.603  INFO 8524 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-09-12 00:00:02.913  INFO 8524 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
2020-09-12 00:00:03.405  INFO 8524 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-09-12 00:00:03.411  INFO 8524 --- [main] com.myproject.mailservice.App            : Started App in 17.472 seconds (JVM running for 18.685)
2020-09-12 00:00:05.572  INFO 8524 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-12 00:00:05.573  INFO 8524 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-09-12 00:00:05.600  INFO 8524 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 26 ms
2020-09-12 00:00:06.047  INFO 8524 --- [http-nio-8080-exec-3] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:00:06.461 DEBUG 8524 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:00:06.591 DEBUG 8524 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:00:09.243  INFO 8524 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:00:09.245 DEBUG 8524 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:00:09.251 DEBUG 8524 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:00:09.749  INFO 8524 --- [http-nio-8080-exec-6] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:00:09.770 DEBUG 8524 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:00:09.788 DEBUG 8524 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:00:09.793 DEBUG 8524 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:00:13.937 ERROR 8524 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.] with root cause

org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1.raiseError(FileUploadBase.java:633) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.checkLimit(LimitedInputStream.java:76) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.io.FilterInputStream.read(Unknown Source) ~[na:1.8.0_251]
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:98) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:294) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.parseParts(Request.java:2868) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.getParts(Request.java:2770) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:1098) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:95) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:88) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:87) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1178) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1012) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.myproject.mailservice.SimpleCORSFilter.doFilter(SimpleCORSFilter.java:37) ~[classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [na:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.8.0_251]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_251]

2020-09-12 00:01:03.886  INFO 8524 --- [http-nio-8080-exec-10] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:01:03.887 DEBUG 8524 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:01:03.893 DEBUG 8524 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:01:04.874  INFO 8524 --- [http-nio-8080-exec-1] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:01:04.876 DEBUG 8524 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:01:04.887 DEBUG 8524 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:01:04.889 DEBUG 8524 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:01:09.424 ERROR 8524 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.] with root cause

org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1.raiseError(FileUploadBase.java:633) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.checkLimit(LimitedInputStream.java:76) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.io.FilterInputStream.read(Unknown Source) ~[na:1.8.0_251]
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:98) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:294) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.parseParts(Request.java:2868) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.getParts(Request.java:2770) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:1098) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:95) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:88) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:87) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1178) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1012) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.myproject.mailservice.SimpleCORSFilter.doFilter(SimpleCORSFilter.java:37) ~[classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [na:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.8.0_251]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_251]

2020-09-12 00:01:41.335  INFO 9448 --- [main] com.myproject.mailservice.App            : Starting App on DESKTOP-PKQ8K3O with PID 9448 (C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice\target\classes started by Sandra in C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice)
2020-09-12 00:01:41.347  INFO 9448 --- [main] com.myproject.mailservice.App            : No active profile set, falling back to default profiles: default
2020-09-12 00:01:43.269  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:01:43.271  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:01:43.456  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 163ms. Found 3 Elasticsearch repository interfaces.
2020-09-12 00:01:43.461  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:01:43.462  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-12 00:01:43.564  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 91ms. Found 7 JPA repository interfaces.
2020-09-12 00:01:44.045  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:01:44.048  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:01:44.168  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:01:44.188  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:01:44.190  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:01:44.194  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:01:44.197  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 148ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-09-12 00:01:44.280  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:01:44.282  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-09-12 00:01:44.355  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.AttachmentRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.356  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.ContactRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.358  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.MessageRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.359  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.360  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AttachmentRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.361  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.363  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.MessageRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.366  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.369  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.372  INFO 9448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:01:44.372  INFO 9448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 89ms. Found 0 JDBC repository interfaces.
2020-09-12 00:01:45.639  INFO 9448 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-12 00:01:46.962  INFO 9448 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-09-12 00:01:46.986  INFO 9448 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-09-12 00:01:46.987  INFO 9448 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-09-12 00:01:47.272  INFO 9448 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-09-12 00:01:47.273  INFO 9448 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5708 ms
2020-09-12 00:01:47.287  INFO 9448 --- [main] c.m.mailservice.SimpleCORSFilter         : SimpleCORSFilter init
2020-09-12 00:01:48.718  INFO 9448 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-09-12 00:01:49.106  INFO 9448 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-09-12 00:01:52.323  INFO 9448 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-12 00:01:57.286  INFO 9448 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-09-12 00:01:57.556  INFO 9448 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
2020-09-12 00:01:58.291  INFO 9448 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-09-12 00:01:58.303  INFO 9448 --- [main] com.myproject.mailservice.App            : Started App in 18.414 seconds (JVM running for 19.908)
2020-09-12 00:01:59.588  INFO 9448 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-12 00:01:59.589  INFO 9448 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-09-12 00:01:59.621  INFO 9448 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 32 ms
2020-09-12 00:02:00.580  INFO 9448 --- [http-nio-8080-exec-3] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:02:01.087 DEBUG 9448 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:02:01.186 DEBUG 9448 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:03.290  INFO 9448 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:02:03.293 DEBUG 9448 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:02:03.304 DEBUG 9448 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:06.212  INFO 9448 --- [http-nio-8080-exec-8] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:02:06.217 DEBUG 9448 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:02:06.225 DEBUG 9448 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:06.701  INFO 9448 --- [http-nio-8080-exec-9] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:02:06.718 DEBUG 9448 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:02:06.739 DEBUG 9448 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:02:06.742 DEBUG 9448 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:11.145 ERROR 9448 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.] with root cause

org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1.raiseError(FileUploadBase.java:633) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.checkLimit(LimitedInputStream.java:76) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.io.FilterInputStream.read(Unknown Source) ~[na:1.8.0_251]
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:98) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:294) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.parseParts(Request.java:2868) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.getParts(Request.java:2770) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:1098) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:95) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:88) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:87) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1178) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1012) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.myproject.mailservice.SimpleCORSFilter.doFilter(SimpleCORSFilter.java:37) ~[classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [na:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.8.0_251]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_251]

2020-09-12 00:02:29.800  INFO 9448 --- [http-nio-8080-exec-3] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:02:29.802 DEBUG 9448 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:02:29.806 DEBUG 9448 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:30.466  INFO 9448 --- [http-nio-8080-exec-4] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:02:30.469 DEBUG 9448 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:02:30.489 DEBUG 9448 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:02:30.493 DEBUG 9448 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:34.992 ERROR 9448 --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.] with root cause

org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1.raiseError(FileUploadBase.java:633) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.checkLimit(LimitedInputStream.java:76) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.io.FilterInputStream.read(Unknown Source) ~[na:1.8.0_251]
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:98) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:294) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.parseParts(Request.java:2868) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.getParts(Request.java:2770) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:1098) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:95) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:88) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:87) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1178) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1012) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.myproject.mailservice.SimpleCORSFilter.doFilter(SimpleCORSFilter.java:37) ~[classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [na:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.8.0_251]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_251]

2020-09-12 00:02:44.664  INFO 9448 --- [http-nio-8080-exec-8] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:02:44.665 DEBUG 9448 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:02:44.672 DEBUG 9448 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:45.697  INFO 9448 --- [http-nio-8080-exec-9] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:02:45.700 DEBUG 9448 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:02:45.715 DEBUG 9448 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:02:45.718 DEBUG 9448 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:02:51.593 ERROR 9448 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.] with root cause

org.apache.tomcat.util.http.fileupload.FileUploadBase$FileSizeLimitExceededException: The field photo exceeds its maximum permitted size of 1048576 bytes.
	at org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1.raiseError(FileUploadBase.java:633) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.checkLimit(LimitedInputStream.java:76) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.io.FilterInputStream.read(Unknown Source) ~[na:1.8.0_251]
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:98) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:294) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.parseParts(Request.java:2868) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.Request.getParts(Request.java:2770) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:1098) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:95) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:88) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:87) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1178) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1012) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.myproject.mailservice.SimpleCORSFilter.doFilter(SimpleCORSFilter.java:37) ~[classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [na:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.8.0_251]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_251]

2020-09-12 00:03:35.253  INFO 6440 --- [main] com.myproject.mailservice.App            : Starting App on DESKTOP-PKQ8K3O with PID 6440 (C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice\target\classes started by Sandra in C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice)
2020-09-12 00:03:35.268  INFO 6440 --- [main] com.myproject.mailservice.App            : No active profile set, falling back to default profiles: default
2020-09-12 00:03:37.082  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:03:37.084  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:03:37.280  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 182ms. Found 3 Elasticsearch repository interfaces.
2020-09-12 00:03:37.285  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:03:37.285  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-12 00:03:37.383  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88ms. Found 7 JPA repository interfaces.
2020-09-12 00:03:37.848  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:03:37.850  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:03:37.967  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:03:37.987  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:03:37.992  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:03:37.997  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:03:37.998  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 147ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-09-12 00:03:38.078  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:03:38.106  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-09-12 00:03:38.184  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.AttachmentRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.186  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.ContactRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.187  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.MessageRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.189  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.191  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AttachmentRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.195  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.196  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.MessageRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.198  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.212  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.214  INFO 6440 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:03:38.215  INFO 6440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103ms. Found 0 JDBC repository interfaces.
2020-09-12 00:03:39.274  INFO 6440 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-12 00:03:40.528  INFO 6440 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-09-12 00:03:40.549  INFO 6440 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-09-12 00:03:40.550  INFO 6440 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-09-12 00:03:40.844  INFO 6440 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-09-12 00:03:40.852  INFO 6440 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5337 ms
2020-09-12 00:03:40.869  INFO 6440 --- [main] c.m.mailservice.SimpleCORSFilter         : SimpleCORSFilter init
2020-09-12 00:03:42.171  INFO 6440 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-09-12 00:03:42.497  INFO 6440 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-09-12 00:03:45.448  INFO 6440 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-12 00:03:50.430  INFO 6440 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-09-12 00:03:50.670  INFO 6440 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
2020-09-12 00:03:51.140  INFO 6440 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-09-12 00:03:51.144  INFO 6440 --- [main] com.myproject.mailservice.App            : Started App in 17.215 seconds (JVM running for 18.389)
2020-09-12 00:03:52.986  INFO 6440 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-12 00:03:52.996  INFO 6440 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-09-12 00:03:53.029  INFO 6440 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 32 ms
2020-09-12 00:03:53.568  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:03:53.937 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:03:54.137 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:03:55.694  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:03:55.697 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:03:55.705 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:03:57.777  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:03:57.779 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:03:57.787 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:00.190  INFO 6440 --- [http-nio-8080-exec-8] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:04:00.203 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:04:01.491  INFO 6440 --- [http-nio-8080-exec-9] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:04:01.496 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:04:01.510 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:01.513 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:03.036  INFO 6440 --- [http-nio-8080-exec-10] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:04:03.040 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:04:03.049 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:03.051 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:08.355  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 17.
2020-09-12 00:04:08.434 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:04:08.980 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:08.988 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:09.303  INFO 6440 --- [http-nio-8080-exec-4] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:04:09.305 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:04:09.311 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:10.522  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:04:10.524 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:04:10.548 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:10.551 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:14.842  INFO 6440 --- [http-nio-8080-exec-6] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:04:14.845 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:04:14.912 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:14.915 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:22.681  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 17.
2020-09-12 00:04:22.695 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:04:22.900 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:22.904 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:23.294  INFO 6440 --- [http-nio-8080-exec-10] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:04:23.297 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:04:23.302 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:04:24.075  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:04:24.076 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:04:24.092 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:04:24.096 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:04.541  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:04.543 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:04.617 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:06.458  INFO 6440 --- [http-nio-8080-exec-6] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 17
2020-09-12 00:05:06.459 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:09.442  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : Delete request, delete contact with id: 17
2020-09-12 00:05:09.455 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:09.495 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select photos0_.`contact_id` as contact_5_7_0_, photos0_.`photo_id` as photo_id1_7_0_, photos0_.`photo_id` as photo_id1_7_1_, photos0_.`contact_id` as contact_5_7_1_, photos0_.`name` as name2_7_1_, photos0_.`photo_path` as photo_pa3_7_1_, photos0_.`pic` as pic4_7_1_ from `photos` photos0_ where photos0_.`contact_id`=?
2020-09-12 00:05:09.548 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : delete from `contact` where `contact_id`=?
2020-09-12 00:05:11.192  INFO 6440 --- [http-nio-8080-exec-9] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:11.194 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:11.198 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:12.474  INFO 6440 --- [http-nio-8080-exec-10] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:05:12.475 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:12.482 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:12.489 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:14.025  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:14.027 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:19.464  INFO 6440 --- [http-nio-8080-exec-2] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 1.
2020-09-12 00:05:19.478 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:05:19.760 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:19.763 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:20.108  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:20.110 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:20.114 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:21.288  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:21.290 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:21.296 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:21.817  INFO 6440 --- [http-nio-8080-exec-8] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:21.818 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:21.828 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:21.831 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:23.049  INFO 6440 --- [http-nio-8080-exec-9] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:05:23.053 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:23.060 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:23.062 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:26.627  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:26.631 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:26.640 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:27.049  INFO 6440 --- [http-nio-8080-exec-2] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:27.052 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:27.060 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:27.063 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:31.512  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:31.514 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:31.524 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:31.527 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:32.864  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:32.867 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:32.871 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:33.289  INFO 6440 --- [http-nio-8080-exec-6] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:05:33.290 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:33.296 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:33.300 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:36.290  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:36.291 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:36.301 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:36.304 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:37.714  INFO 6440 --- [http-nio-8080-exec-8] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:05:37.716 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:37.723 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:37.725 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:47.491  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:05:47.493 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:05:47.499 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:50.770  INFO 6440 --- [http-nio-8080-exec-2] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:50.772 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:50.781 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:50.784 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:52.002  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:05:52.005 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:52.011 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:52.016 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:55.002  INFO 6440 --- [http-nio-8080-exec-4] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:05:55.004 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:55.010 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:55.014 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:05:57.305  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:05:57.308 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:05:57.316 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:05:57.318 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:06:39.040  INFO 6440 --- [http-nio-8080-exec-9] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:06:39.042 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:06:39.045 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:06:42.091  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:06:42.094 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:06:42.099 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:06:42.674  INFO 6440 --- [http-nio-8080-exec-2] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:06:42.675 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:06:42.682 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:06:42.686 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:06:45.234  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:06:45.238 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:06:45.245 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:06:45.247 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:06:48.859  INFO 6440 --- [http-nio-8080-exec-4] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:06:48.861 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:06:48.870 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:06:48.873 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:06:53.257  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:06:53.259 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:06:53.268 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:06:53.270 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:09.949  INFO 6440 --- [http-nio-8080-exec-8] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:07:09.951 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:07:09.959 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:16.137  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:07:16.141 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:07:16.148 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:16.579  INFO 6440 --- [http-nio-8080-exec-2] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:07:16.580 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:16.587 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:16.591 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:20.607  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:07:20.610 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:20.619 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:20.621 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:22.794  INFO 6440 --- [http-nio-8080-exec-4] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:07:22.795 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:22.802 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:22.805 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:24.561  INFO 6440 --- [http-nio-8080-exec-5] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:07:24.563 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:24.570 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:24.573 DEBUG 6440 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:26.067  INFO 6440 --- [http-nio-8080-exec-6] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:07:26.068 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:26.076 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:26.078 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:35.982  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 2.
2020-09-12 00:07:35.996 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:07:36.466 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:36.468 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:36.807  INFO 6440 --- [http-nio-8080-exec-10] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:07:36.808 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:07:36.811 DEBUG 6440 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:38.060  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:07:38.061 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:38.073 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:38.075 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:45.837  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:07:45.839 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:45.851 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:45.854 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:57.623  INFO 6440 --- [http-nio-8080-exec-6] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:07:57.625 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:07:57.629 DEBUG 6440 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:07:58.124  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:07:58.126 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:07:58.138 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:07:58.141 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:08:00.037  INFO 6440 --- [http-nio-8080-exec-8] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:08:00.038 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:08:00.048 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:08:00.052 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:08:11.691  INFO 6440 --- [http-nio-8080-exec-9] c.m.m.controller.UserController          : GET request for user by username: nekica
2020-09-12 00:08:11.699 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_, user0_.`user_firstname` as user_fir2_3_, user0_.`user_lastname` as user_las3_3_, user0_.`user_password` as user_pas4_3_, user0_.`user_type` as user_typ5_3_, user0_.`user_username` as user_use6_3_ from `euser` user0_ where user0_.`user_username`=? and user0_.`user_password`=?
2020-09-12 00:08:13.344  INFO 6440 --- [http-nio-8080-exec-2] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 2
2020-09-12 00:08:13.347 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:08:13.351 DEBUG 6440 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:08:14.882  INFO 6440 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 4
2020-09-12 00:08:14.884 DEBUG 6440 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:08:23.712  INFO 6440 --- [http-nio-8080-exec-4] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 4.
2020-09-12 00:08:23.719 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:08:23.790 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:08:23.795 DEBUG 6440 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:08:24.094  INFO 6440 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 2
2020-09-12 00:08:24.095 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:08:24.098 DEBUG 6440 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:08:25.401  INFO 6440 --- [http-nio-8080-exec-8] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 4
2020-09-12 00:08:25.402 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:08:25.405 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:08:25.407 DEBUG 6440 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:08:27.065  INFO 6440 --- [http-nio-8080-exec-9] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 3
2020-09-12 00:08:27.069 DEBUG 6440 --- [http-nio-8080-exec-9] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:08:29.581  INFO 6440 --- [http-nio-8080-exec-1] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 2
2020-09-12 00:08:29.582 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:08:29.585 DEBUG 6440 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:09:59.087  INFO 5696 --- [main] com.myproject.mailservice.App            : Starting App on DESKTOP-PKQ8K3O with PID 5696 (C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice\target\classes started by Sandra in C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice)
2020-09-12 00:09:59.099  INFO 5696 --- [main] com.myproject.mailservice.App            : No active profile set, falling back to default profiles: default
2020-09-12 00:10:01.257  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:10:01.259  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:10:01.470  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 189ms. Found 3 Elasticsearch repository interfaces.
2020-09-12 00:10:01.475  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:10:01.476  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-12 00:10:01.590  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 101ms. Found 7 JPA repository interfaces.
2020-09-12 00:10:02.113  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:10:02.115  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:10:02.265  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:10:02.289  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:10:02.292  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:10:02.296  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:10:02.296  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 179ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-09-12 00:10:02.388  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:10:02.429  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-09-12 00:10:02.524  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.AttachmentRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.526  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.ContactRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.528  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.MessageRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.533  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.540  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AttachmentRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.542  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.543  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.MessageRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.544  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.546  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.547  INFO 5696 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:10:02.547  INFO 5696 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 112ms. Found 0 JDBC repository interfaces.
2020-09-12 00:10:04.129  INFO 5696 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-12 00:10:05.575  INFO 5696 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-09-12 00:10:05.598  INFO 5696 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-09-12 00:10:05.598  INFO 5696 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-09-12 00:10:05.913  INFO 5696 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-09-12 00:10:05.914  INFO 5696 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 6550 ms
2020-09-12 00:10:05.932  INFO 5696 --- [main] c.m.mailservice.SimpleCORSFilter         : SimpleCORSFilter init
2020-09-12 00:10:07.805  INFO 5696 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-09-12 00:10:08.250  INFO 5696 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-09-12 00:10:12.112  INFO 5696 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-12 00:10:18.732  INFO 5696 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-09-12 00:10:19.041  INFO 5696 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
2020-09-12 00:10:19.618  INFO 5696 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-09-12 00:10:19.623  INFO 5696 --- [main] com.myproject.mailservice.App            : Started App in 21.782 seconds (JVM running for 23.093)
2020-09-12 00:10:19.838  INFO 5696 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-12 00:10:19.839  INFO 5696 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-09-12 00:10:19.867  INFO 5696 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 28 ms
2020-09-12 00:10:25.612  INFO 5696 --- [http-nio-8080-exec-2] c.m.m.controller.UserController          : GET request for user by username: sakica
2020-09-12 00:10:25.984 DEBUG 5696 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_, user0_.`user_firstname` as user_fir2_3_, user0_.`user_lastname` as user_las3_3_, user0_.`user_password` as user_pas4_3_, user0_.`user_type` as user_typ5_3_, user0_.`user_username` as user_use6_3_ from `euser` user0_ where user0_.`user_username`=? and user0_.`user_password`=?
2020-09-12 00:10:47.467 DEBUG 5696 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_
2020-09-12 00:10:47.531 DEBUG 5696 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:10:47.542 DEBUG 5696 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:10:47.550 DEBUG 5696 --- [http-nio-8080-exec-6] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:10:52.616 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_
2020-09-12 00:10:52.624 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:10:52.630 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:10:52.634 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:10:58.409  INFO 5696 --- [http-nio-8080-exec-10] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:10:58.460 DEBUG 5696 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:10:58.466 DEBUG 5696 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:00.694  INFO 5696 --- [http-nio-8080-exec-1] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:11:00.712 DEBUG 5696 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:11:00.750 DEBUG 5696 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:00.753 DEBUG 5696 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:03.205  INFO 5696 --- [http-nio-8080-exec-2] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 1
2020-09-12 00:11:03.210 DEBUG 5696 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:11:03.221 DEBUG 5696 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:03.225 DEBUG 5696 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:17.927  INFO 5696 --- [http-nio-8080-exec-3] c.m.m.controller.ContactController       : Post request for adding new contact with firstname: dsa for user with id: 1
2020-09-12 00:11:17.979 DEBUG 5696 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : insert into `contact` (`contact_display_name`, `contact_email`, `user_id`, `contact_firstname`, `contact_lastname`, `contact_note`) values (?, ?, ?, ?, ?, ?)
2020-09-12 00:11:18.079 DEBUG 5696 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:18.181  INFO 5696 --- [http-nio-8080-exec-4] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 18.
2020-09-12 00:11:18.202 DEBUG 5696 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:11:18.615 DEBUG 5696 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:18.618 DEBUG 5696 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:19.687  INFO 5696 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:11:19.689 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:11:19.694 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:27.289  INFO 5696 --- [http-nio-8080-exec-2] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:11:27.291 DEBUG 5696 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:11:27.295 DEBUG 5696 --- [http-nio-8080-exec-2] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:27.713  INFO 5696 --- [http-nio-8080-exec-3] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 18
2020-09-12 00:11:27.714 DEBUG 5696 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:11:27.721 DEBUG 5696 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:27.724 DEBUG 5696 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:32.325  INFO 5696 --- [http-nio-8080-exec-4] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 18
2020-09-12 00:11:32.327 DEBUG 5696 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:11:32.336 DEBUG 5696 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:32.340 DEBUG 5696 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:36.498  INFO 5696 --- [http-nio-8080-exec-5] c.m.m.controller.ContactController       : POST Method, upload photo for contact with id: 18.
2020-09-12 00:11:36.519 DEBUG 5696 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : insert into `photos` (`contact_id`, `name`, `photo_path`, `pic`) values (?, ?, ?, ?)
2020-09-12 00:11:36.708 DEBUG 5696 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:36.712 DEBUG 5696 --- [http-nio-8080-exec-5] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:37.126  INFO 5696 --- [http-nio-8080-exec-7] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:11:37.128 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:11:37.135 DEBUG 5696 --- [http-nio-8080-exec-7] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:38.073  INFO 5696 --- [http-nio-8080-exec-8] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:11:38.074 DEBUG 5696 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:11:38.080 DEBUG 5696 --- [http-nio-8080-exec-8] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:40.783  INFO 5696 --- [http-nio-8080-exec-10] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 2
2020-09-12 00:11:40.785 DEBUG 5696 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:11:40.822 DEBUG 5696 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:40.824 DEBUG 5696 --- [http-nio-8080-exec-10] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:11:42.243  INFO 5696 --- [http-nio-8080-exec-1] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 18
2020-09-12 00:11:42.244 DEBUG 5696 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:11:42.256 DEBUG 5696 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
2020-09-12 00:11:42.260 DEBUG 5696 --- [http-nio-8080-exec-1] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:12:10.749  INFO 15876 --- [main] com.myproject.mailservice.App            : Starting App on DESKTOP-PKQ8K3O with PID 15876 (C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice\target\classes started by Sandra in C:\Users\Sandra\Pictures\mailService\mailserviceUES\mailservice)
2020-09-12 00:12:10.780  INFO 15876 --- [main] com.myproject.mailservice.App            : No active profile set, falling back to default profiles: default
2020-09-12 00:12:12.616  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:12:12.618  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:12:12.809  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 174ms. Found 3 Elasticsearch repository interfaces.
2020-09-12 00:12:12.814  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:12:12.815  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-12 00:12:12.914  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 86ms. Found 7 JPA repository interfaces.
2020-09-12 00:12:13.395  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:12:13.398  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2020-09-12 00:12:13.534  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:12:13.547  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:12:13.549  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:12:13.553  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2020-09-12 00:12:13.554  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 155ms. Found 0 Reactive Elasticsearch repository interfaces.
2020-09-12 00:12:13.620  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-12 00:12:13.625  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-09-12 00:12:13.685  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.AttachmentRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.686  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.ContactRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.692  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.elasticsearch.repository.MessageRepositoryElasticSearch. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.696  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.699  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.AttachmentRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.701  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.703  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.MessageRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.709  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.PhotoRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.713  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.TagRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.714  INFO 15876 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.myproject.mailservice.repository.UserRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2020-09-12 00:12:13.715  INFO 15876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 86ms. Found 0 JDBC repository interfaces.
2020-09-12 00:12:14.775  INFO 15876 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-12 00:12:16.059  INFO 15876 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-09-12 00:12:16.080  INFO 15876 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-09-12 00:12:16.081  INFO 15876 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-09-12 00:12:16.367  INFO 15876 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-09-12 00:12:16.368  INFO 15876 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5319 ms
2020-09-12 00:12:16.387  INFO 15876 --- [main] c.m.mailservice.SimpleCORSFilter         : SimpleCORSFilter init
2020-09-12 00:12:17.849  INFO 15876 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-09-12 00:12:18.229  INFO 15876 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-09-12 00:12:21.473  INFO 15876 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-12 00:12:26.358  INFO 15876 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-09-12 00:12:26.595  INFO 15876 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
2020-09-12 00:12:27.069  INFO 15876 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-09-12 00:12:27.074  INFO 15876 --- [main] com.myproject.mailservice.App            : Started App in 17.871 seconds (JVM running for 19.102)
2020-09-12 00:12:29.288  INFO 15876 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-12 00:12:29.290  INFO 15876 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-09-12 00:12:29.313  INFO 15876 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 23 ms
2020-09-12 00:12:29.970  INFO 15876 --- [http-nio-8080-exec-3] c.m.m.controller.ContactController       : GET request for all contacts from user with id: 1
2020-09-12 00:12:30.343 DEBUG 15876 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_, contact0_.`contact_display_name` as contact_2_2_, contact0_.`contact_email` as contact_3_2_, contact0_.`user_id` as user_id7_2_, contact0_.`contact_firstname` as contact_4_2_, contact0_.`contact_lastname` as contact_5_2_, contact0_.`contact_note` as contact_6_2_ from `contact` contact0_ left outer join `euser` user1_ on contact0_.`user_id`=user1_.`user_id` where user1_.`user_id`=?
2020-09-12 00:12:30.445 DEBUG 15876 --- [http-nio-8080-exec-3] org.hibernate.SQL                        : select user0_.`user_id` as user_id1_3_0_, user0_.`user_firstname` as user_fir2_3_0_, user0_.`user_lastname` as user_las3_3_0_, user0_.`user_password` as user_pas4_3_0_, user0_.`user_type` as user_typ5_3_0_, user0_.`user_username` as user_use6_3_0_ from `euser` user0_ where user0_.`user_id`=?
2020-09-12 00:12:34.457  INFO 15876 --- [http-nio-8080-exec-4] c.m.m.controller.PhotoController         : GET request for all photos from contact with id: 18
2020-09-12 00:12:34.475 DEBUG 15876 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select photo0_.`photo_id` as photo_id1_7_, photo0_.`contact_id` as contact_5_7_, photo0_.`name` as name2_7_, photo0_.`photo_path` as photo_pa3_7_, photo0_.`pic` as pic4_7_ from `photos` photo0_ left outer join `contact` contact1_ on photo0_.`contact_id`=contact1_.`contact_id` where contact1_.`contact_id`=?
2020-09-12 00:12:34.496 DEBUG 15876 --- [http-nio-8080-exec-4] org.hibernate.SQL                        : select contact0_.`contact_id` as contact_1_2_0_, contact0_.`contact_display_name` as contact_2_2_0_, contact0_.`contact_email` as contact_3_2_0_, contact0_.`user_id` as user_id7_2_0_, contact0_.`contact_firstname` as contact_4_2_0_, contact0_.`contact_lastname` as contact_5_2_0_, contact0_.`contact_note` as contact_6_2_0_ from `contact` contact0_ where contact0_.`contact_id`=?
